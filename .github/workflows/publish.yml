name: Publish

on:
  release:
    types:
      - edited
      - published

env:
  DOCKER_IMAGE: lgcorzo/fastapi-autogen-team

concurrency:
  group: publish-workflow
  cancel-in-progress: true

jobs:

  # Job para generar y desplegar la documentaci√≥n en GitHub Pages
  pages:
    name: Deploy Docs to GitHub Pages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Install dependencies (with docs extras)
        run: poetry install --with docs

      - name: Generate documentation
        run: poetry run invoke docs

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.7.3
        with:
          folder: docs/
          branch: gh-pages

  # Job para construir y publicar la imagen Docker
  packages:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment:
      name: fastapi-autoge-team-env
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Install dependencies (with dev extras)
        run: poetry install --with dev

      - name: Run packaging script
        run: poetry run invoke packages

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha
          tags: ${{ env.DOCKER_IMAGE }}:latest,${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}

      - name: Show image tags
        run: 'echo "Published tags: latest and ${''{{ github.ref_name }}''}"'
